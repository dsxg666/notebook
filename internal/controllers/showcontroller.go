package controllers

import (
	"fmt"
	"github.com/dsxg666/notebook/global"
	"github.com/dsxg666/notebook/internal/db"
	"github.com/dsxg666/notebook/pkg/email"
	"github.com/gin-gonic/gin"
	"net/http"
	"strings"
)

type ShowController struct{}

func (ctl ShowController) Home(c *gin.Context) {
	c.HTML(200, "show/home.html", nil)
}

func (ctl ShowController) Contact(c *gin.Context) {
	c.HTML(200, "show/contact.html", nil)
}

func (ctl ShowController) Intro(c *gin.Context) {
	c.HTML(200, "show/author.html", nil)
}

func (ctl ShowController) SendMsg(c *gin.Context) {
	name := c.PostForm("name")
	subject := c.PostForm("subject")
	content := c.PostForm("content")
	hisMail := c.PostForm("email")
	mailer := email.NewEmail(&email.SMTPInfo{
		Host:     global.EmailSetting.Host,
		Port:     global.EmailSetting.Port,
		IsSSL:    global.EmailSetting.IsSSL,
		UserName: global.EmailSetting.UserName,
		Password: global.EmailSetting.Password,
		From:     global.EmailSetting.From,
	})
	err := mailer.SendMail("2637046983@qq.com", subject, fmt.Sprintf("ÂèëÈÄÅ‰∫∫ÂêçÁß∞: %s ;ÈÇÆÁÆ±: %s ;ÂÜÖÂÆπ: %s",
		name, hisMail, content))
	if err != nil {
		global.SugarLogger.Error("mailer.SendMail err:", err)
	}
	c.JSON(http.StatusOK, nil)
}

func handle(category string) []db.Article {
	a := db.Article{Category: category}
	arr := a.SelectAll()
	for i := 0; i < len(arr); i++ {
		arr[i].Time = strings.ReplaceAll(arr[i].Time[:10], "-", "/")
	}
	return arr
}

func (ctl ShowController) Category(c *gin.Context) {
	id := c.Param("id")
	if id == "1" {
		arr := handle("Golang")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Golang",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "GoÊòØÂØåÊúâË°®Áé∞ÂäõÁöÑ„ÄÅÁÆÄÊ¥ÅÁöÑ„ÄÅÂπ≤ÂáÄÁöÑ„ÄÅÈ´òÊïàÁöÑ„ÄÇÂÆÉÁöÑÂπ∂ÂèëÊú∫Âà∂‰ΩøÁºñÂÜôÂ§öÊ†∏ÂíåÁΩëÁªúÊú∫Âô®ÁöÑÁ®ãÂ∫èÂèòÂæóÂÆπÊòìÔºåËÄåÂÆÉÁöÑÊñ∞ÂûãÁ≥ªÁªü‰ΩøÁ®ãÂ∫èÁªìÊûÑÁÅµÊ¥ªÂíåÊ®°ÂùóÂåñ„ÄÇGoÂèØ‰ª•Âø´ÈÄüÁºñËØë‰∏∫Êú∫Âô®Á†ÅÔºåÂêåÊó∂ËøòÂÖ∑ÊúâÂûÉÂúæÊî∂ÈõÜÁöÑ‰æøÂà©ÊÄßÂíåËøêË°åÊó∂ÂèçÂ∞ÑÁöÑËÉΩÂäõ„ÄÇÂÆÉÊòØ‰∏ÄÁßçÂø´ÈÄüÁöÑ„ÄÅÈùôÊÄÅÁ±ªÂûãÁöÑÁºñËØëËØ≠Ë®ÄÔºå‰ΩÜÊÑüËßâ‰∏äÂÉèÊòØ‰∏ÄÁßçÂä®ÊÄÅÁ±ªÂûãÁöÑËß£ÈáäÂûãËØ≠Ë®Ä„ÄÇ",
		})
	} else if id == "2" {
		arr := handle("Blockchain")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Blockchain",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "Âéª‰∏≠ÂøÉÂåñÔºüÁÇπÂØπÁÇπÔºüË¥¶Êú¨ÔºüÊï∞ÊçÆÂ∫ìÔºü‰∏ÄËµ∑Ëµ∞ËøõÂå∫ÂùóÈìæÔºÅ",
		})
	} else if id == "3" {
		arr := handle("Linux")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Linux",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "LinuxÔºåÂÖ®Áß∞GNU/LinuxÔºåÊòØ‰∏ÄÁßçÂÖçË¥π‰ΩøÁî®ÂíåËá™Áî±‰º†Êí≠ÁöÑÁ±ªUNIXÊìç‰ΩúÁ≥ªÁªüÔºåÂÖ∂ÂÜÖÊ†∏Áî±ÊûóÁ∫≥ÊñØ¬∑Êú¨Á∫≥Á¨¨ÂÖãÁâπ¬∑ÊâòÁì¶ÂÖπ‰∫é1991Âπ¥10Êúà5Êó•È¶ñÊ¨°ÂèëÂ∏ÉÔºåÂÆÉ‰∏ªË¶ÅÂèóÂà∞MinixÂíåUnixÊÄùÊÉ≥ÁöÑÂêØÂèëÔºåÊòØ‰∏Ä‰∏™Âü∫‰∫éPOSIXÁöÑÂ§öÁî®Êà∑„ÄÅÂ§ö‰ªªÂä°„ÄÅÊîØÊåÅÂ§öÁ∫øÁ®ãÂíåÂ§öCPUÁöÑÊìç‰ΩúÁ≥ªÁªü„ÄÇ",
		})
	} else if id == "4" {
		arr := handle("Tour")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "ÊóÖÊ∏∏",
			"categoryB": "ÁîüÊ¥ªÁ±ª",
			"intro":     "ÊóÖË°åÂèØ‰ª•ËÆ©Ëá™Â∑±ÂèòÂæóÊõ¥ÁæéÂ•Ω„ÄÇÂú®ÊóÖË°åÁöÑÂêåÊó∂ÔºåÈÄÜÂ¢ûÈïøÁöÑÊòØËßÅËØÜÔºåÂÖÖÂÆûÁöÑÊòØÁÅµÈ≠ÇÔºå‰ºöÊõ¥Âä†ÂÆåÂñÑËá™Â∑±ÔºåÁúºÁïåÂºÄÈòîÔºåÂøÉÊÄùÈÄè‰∫Æ„ÄÇÊâÄËßÅÊâÄÈóª‰ºöËÆ©‰Ω†ÊáµÊáÇÁöÑÁÅµÈ≠ÇÂèòÂæóÁü•ÊÄß„ÄÅË±ÅËææ„ÄÇ",
		})
	} else if id == "5" {
		arr := handle("MyArticle")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "ÊàëÁöÑÊñáÁ´†",
			"categoryB": "ÁîüÊ¥ªÁ±ª",
			"intro":     "Â≠¶ÁñèÊâçÊµÖÔºåÊãô‰ΩúÊï∞ÁØáÔºåÂ∏åÊúõÂñúÊ¨¢ÔºåÂòªÂòªÂòªüòÅ",
		})
	} else if id == "6" {
		arr := handle("Painting")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "ÊàëÊòØÂ§ßÁîªÂÆ∂",
			"categoryB": "ÁîüÊ¥ªÁ±ª",
			"intro":     "ÁîªÁîª‰ΩøÂøÉÁÅµÂÆâÂÆÅÔºåÁîªÁîªÊòØ‰∏Ä‰ª∂Èô∂ÂÜ∂ÊÉÖÊìçÁöÑ‰∫ãÊÉÖÔºåÊòØËá™Â∑±ÂíåËßÇËÄÖÁöÑÂØπËØùÔºå‰πüÊòØËá™Â∑±ÂíåÂÜÖÂøÉÁöÑ‰∫§‰∫í„ÄÇÂú®ÈöæÂæóÁöÑÈó≤ÊöáÊó∂ÂÖâ,ÁîªÁîª,ÈùôÂøÉ,ÂÖªÊ∞îË¥®„ÄÇ‰πÉ‰∫∫Áîü‰∏≠ÁöÑ‰∏ÄÂ§ßÁæé‰∫ã„ÄÇ",
		})
	} else if id == "7" {
		arr := handle("Literature")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "ÊñáÂ≠¶",
			"categoryB": "ÊñáÂ≠¶Á±ª",
			"intro":     "ÁªèÂÖ∏ÊòØÂÖ∑ÊúâÂÖ∏ËåÉÊÄß„ÄÅÊùÉÂ®ÅÊÄßÁöÑÁªè‰πÖ‰∏çË°∞ÁöÑ‰∏á‰∏ñ‰πã‰ΩúÔºåÁªèËøáÂéÜÂè≤ÈÄâÊã©Âá∫Êù•ÁöÑÊúÄÊúâ‰ª∑ÂÄºÁöÑ„ÄÅÊúÄËÉΩË°®Áé∞Ë°å‰∏öÁöÑÁ≤æÈ´ìÁöÑ„ÄÅÊúÄÂÖ∑‰ª£Ë°®ÊÄßÁöÑ„ÄÅÊúÄÂÆåÁæéÁöÑ‰ΩúÂìÅ„ÄÇ",
		})
	} else if id == "8" {
		arr := handle("Frontend")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Frontend",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "ÂìàÂìàÔºåËôΩÁÑ∂ÊàëÊòØÂâçÁ´ØËèúÁãóÔºå‰ΩÜË∞ÅËØ¥ÂêéÁ´Ø‰∏çËÉΩÊúâ‰∏ÄÈ¢óÁß∞‰∏∫ÂâçÁ´ØÂ§ßÂ∏àÁöÑÂøÉÂë¢„ÄÇ",
		})
	} else if id == "9" {
		arr := handle("ComputerBasis")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "ComputerBasis",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "Âü∫Á°Ä‰∏çÁâ¢Âú∞Âä®Â±±ÊëáÔºÅÂü∫Á°Ä‰∏çÁâ¢Âú∞Âä®Â±±ÊëáÔºÅÂü∫Á°Ä‰∏çÁâ¢Âú∞Âä®Â±±ÊëáÔºÅ",
		})
	} else if id == "10" {
		arr := handle("OtherTechnology")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "OtherTechnology",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "ÊäÄÊúØÁöÑÂèëÂ±ïÊòØÂæàÂø´ÁöÑÔºåËÆ°ÁÆóÊú∫ËΩØ‰ª∂Â∞§ÂÖ∂Â¶ÇÊ≠§ÔºåË¶ÅËøΩÈÄêÊó∂‰ª£ÁöÑÊ≠•‰ºêÔºåÂ∞±ÂøÖÈ°ªÊåÅÁª≠Â≠¶‰π†„ÄÇ",
		})
	} else if id == "11" {
		arr := handle("Java")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Java",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "JavaÊòØ‰∏ÄÁßçÈ´òÁ∫ßÁöÑ„ÄÅÂü∫‰∫éÁ±ªÁöÑ„ÄÅÈù¢ÂêëÂØπË±°ÁöÑÁºñÁ®ãËØ≠Ë®Ä„ÄÇJavaÊòØ‰∏ÄÈó®ÈùûÂ∏∏ÊàêÁÜü„ÄÅÂèØÈù†ÁöÑËØ≠Ë®ÄÔºåË∂ÖËøá3‰∫øËÆæÂ§á‰ΩøÁî®JavaËøêË°å„ÄÇ",
		})
	} else if id == "12" {
		arr := handle("Python")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Python",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "PythonÊòØ‰∏ÄÁßçÈ´òÁ∫ßÁöÑ„ÄÅÈÄöÁî®ÁöÑÁºñÁ®ãËØ≠Ë®Ä„ÄÇÂÆÉÁöÑËÆæËÆ°ÁêÜÂøµÂº∫Ë∞É‰ª£Á†ÅÁöÑÂèØËØªÊÄßÔºåÂπ∂‰ΩøÁî®ÊúâÊÑè‰πâÁöÑÁº©Ëøõ„ÄÇÂÆÉÁöÑËØ≠Ë®ÄÁªìÊûÑÂíåÈù¢ÂêëÂØπË±°ÁöÑÊñπÊ≥ïÊó®Âú®Â∏ÆÂä©Á®ãÂ∫èÂëò‰∏∫Â∞èÂûãÂíåÂ§ßÂûãÈ°πÁõÆÁºñÂÜôÊ∏ÖÊô∞ÁöÑ„ÄÅÂêà‰πéÈÄªËæëÁöÑ‰ª£Á†Å„ÄÇ",
		})
	} else if id == "13" {
		arr := handle("C")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "C",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "CËØ≠Ë®ÄÊòØ‰∏ÄÁßçÈÄöÁî®ÁöÑÁºñÁ®ãËØ≠Ë®ÄÔºå‰∫é1972Âπ¥ÂºÄÂèëÔºåÂà∞Áé∞Âú®‰ªçÁÑ∂ÂæàÂèóÊ¨¢Ëøé„ÄÇCÈùûÂ∏∏Âº∫Â§ßÔºåÂÆÉË¢´Â∏∏Áî®‰∫éÂºÄÂèëÊìç‰ΩúÁ≥ªÁªü„ÄÅÊï∞ÊçÆÂ∫ìÁ≠âÁ≠â„ÄÇ",
		})
	} else if id == "14" {
		arr := handle("Android")
		c.HTML(200, "show/category.html", gin.H{
			"arr":       arr,
			"categoryS": "Android",
			"categoryB": "ÊäÄÊúØÁ±ª",
			"intro":     "AndroidÊòØGoogleÂºÄÂèëÁöÑÂü∫‰∫éLinuxÂπ≥Âè∞ÁöÑÂºÄÊ∫êÊâãÊú∫Êìç‰ΩúÁ≥ªÁªü„ÄÇÂÆÉÂåÖÊã¨Êìç‰ΩúÁ≥ªÁªü„ÄÅÁî®Êà∑ÁïåÈù¢ÂíåÂ∫îÁî®Á®ãÂ∫èÁ≠âÁßªÂä®ÁîµËØùÂ∑•‰ΩúÊâÄÈúÄÁöÑÂÖ®ÈÉ®ËΩØ‰ª∂ÔºåËÄå‰∏î‰∏çÂ≠òÂú®‰ªª‰Ωï‰ª•ÂæÄÈòªÁ¢çÁßªÂä®‰∫ß‰∏öÂàõÊñ∞ÁöÑ‰∏ìÊúâÊùÉÈöúÁ¢ç„ÄÇ",
		})
	}
}

func (ctl ShowController) Article(c *gin.Context) {
	id := c.Param("id")
	a := db.Article{Id: id}
	a1 := a.Select()
	a.UpdateClick()
	c.HTML(200, "show/article.html", gin.H{"article": a1})
}

func (ctl ShowController) Search(c *gin.Context) {
	id := c.PostForm("id")
	a := db.Article{Id: id}
	a1 := a.Select()
	if a1.Content == "" {
		c.HTML(200, "show/home.html", gin.H{"err": "err"})
	} else {
		a.UpdateClick()
		a1.Time = strings.ReplaceAll(a1.Time[:10], "-", "/")
		c.HTML(200, "show/article.html", gin.H{"article": a1})
	}
}
